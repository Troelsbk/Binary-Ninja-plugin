#instructions with special format
specialInstructions =  ['LWC2', 'MTHI', 'MTLO', 'MULT', 'MULTU', 'PREF', 'SC', 'SDC2', 'SRL', 'SRLV', 'SWC2', 
                        'TEQ', 'TGE', 'TGEI', 'TGEIU', 'TGEU', 'TLT', 'TLTI', 'TLTIU', 'TLTU', 'TNE', 'TNEI', 'RDHWR']

#Implemented branch instructions minus bal
branchInstructions =    ['beq', 'beql', 'bgez', 'bgezall', 'bgezl', 'bgtz', 'bgtzl', 'blez', 
                        'blezl', 'bltz', 'bltzal', 'bltzall', 'bltzl', 'bne', 'bnel']


#removed from unsigned_instructions:'addiu','addu','lbu','lhu','lwu',
#lbu signed offset
#unable to determine sltiu and tgeiu
unsigned_instructions = [  'ddivu', 'divu', 'dmultu', 'dsubu', 'multu', 'sltiu', 'sltu', 'subu', 'tgeiu', 'tgeu', 'tltiu', 'tltu']

# load and store instructions minus load immediate types: lui
load_store_ins =    ['lb', 'lbu', 'ld', 'ldc1', 'ldl', 'ldr', 'lh', 'lhu', 'lld', 'lw', 'lwc1', 'lwc3', 'lwl', 
                    'lwr', 'lwu', 'sb', 'scd', 'sd', 'sdc1', 'sdl', 'sdr', 'sh', 'sw', 'swc1', 'swl', 'swr']

rSpecial = ['lwc2', 'mthi', 'mtlo', 'mult', 'multu', 'sdc2', 'srl', 'srlv', 'teq', 'tge', 'tgeu', 'tlt', 'tltu', 'tne', 'rdhwr']
iSpecial = ['tgei', 'tgeiu', 'tlti', 'tltiu', 'tnei']

zeroOpcodes = {
             0: [('sll', 'R', 'Shift Word Left Logical', 'Opcode in rs:0x0, function 0x0')],
             2: [('srl', 'R', 'Shift Word Right Logical', 'Special ins. format')],
             3: [('sra', 'R', 'Shift Word Right Arithmetic', 'opcode in rs: 0x0')],
             4: [('sllv', 'R', 'Shift Word Left Logical Variable')],
             6: [('srlv', 'R', 'Shift Word Right Logical Variable', 'Special ins. format')],
             7: [('srav', 'R', 'Shift Word Right Arithmetic Variable', 'Opcode in sa: 0x0')],
             8: [('jr', 'R', 'Jump Register', 'Old format mips 1')],
             9: [('jalr', 'R', 'Jump And Link Register', 'Release 6: rd != 0x0'),
                 ('jr', 'R', 'Jump Register',
                  'MIPS32: Assembly idiom MIPS32 Release 6 change from pre-release 6')],
             10: [('movz', 'R', 'Move Conditional on Zero',
                   'MIPS32 Release 2, removed in Release 6')],
             11: [('movn', 'R', 'Move Conditional on Not Zero', 'MIPS32, removed in Release 6')],
             13: [('break', 'R', 'Breakpoint')],
             16: [('mfhi', 'R', 'Move From HI Register', 'MIPS32, removed in Release 6')],
             17: [('mthi', 'R', 'Move To HI Register',
                   'MIPS32, removed in Release 6, special format')],
             18: [('mflo', 'R', 'Move From LO Register', 'MIPS32, removed in Release 6')],
             19: [('mtlo', 'R', 'Move To LO Register',
                   'MIPS32, removed in Release 6, special format')],
             20: [('dsllv', 'R', 'Doubleword Shift Left Logical Variable', 'depreciated')],
             22: [('dsrlv', 'R', 'Doubleword Shift Right Logical Variable', 'depreciated')],
             23: [('dsrav', 'R', 'Doubleword Shift Right Arithmetic Variable', 'depreciated')],
             24: [('mult', 'R', 'Multiply Word', 'MIPS32, removed in Release 6, special format')],
             25: [('multu', 'R', 'Multiply Unsigned Word',
                   'MIPS32, removed in Release 6, special format')],
             26: [('div', 'R', 'Divide Word', 'MIPS32, removed in Release 6')],
             27: [('divu', 'R', 'Divide Unsigned Word', 'MIPS32, removed in Release 6')],
             28: [('dmult', 'R', 'Doubleword Multiply', 'MIPS32, removed in Release 6')],
             29: [('dmultu', 'R', 'Doubleword Multiply Unsigned', 'MIPS32, removed in Release 6')],
             30: [('ddiv', 'R', 'Doubleword Divide ', 'MIPS32, removed in Release 6')],
             31: [('ddivu', 'R', 'Doubleword Divide Unsigned (depreciated)',
                   'MIPS32, removed in Release 6')],
             32: [('add', 'R', 'Add Word')],
             33: [('addu', 'R', 'Add Unsigned Word')],
             34: [('sub', 'R', 'Subtract Word', 'Opcode in sa: 0x0')],
             35: [('subu', 'R', 'Subtract Unsigned Word', 'Opcode in sa: 0x0')],
             36: [('and', 'R', 'AND')],
             37: [('or', 'R', 'OR')],
             38: [('xor', 'R', 'Exclusive OR')],
             39: [('nor', 'R', 'Not Or')],
             42: [('slt', 'R', 'Set On Less Than', 'Opcode in sa: 0x0')],
             43: [('sltu', 'R', 'Set on Less Than Unsigned', 'Opcode in sa: 0x0')],
             46: [('dsub', 'R', 'Doubleword Subtract', 'depreciated')],
             47: [('dsubu', 'R', 'Doubleword Subtract Unsigned', 'depreciated')],
             48: [('tge', 'R', 'Trap if Greater or Equal', 'Special format')],
             49: [('tgeu', 'R', 'Trap If Greater or Equal Unsigned', 'Special format')],
             50: [('tlt', 'R', 'Trap if Less Than', 'Special format')],
             51: [('tltu', 'R', 'Trap if Less Than Unsigned', 'Special format')],
             52: [('teq', 'R', 'Trap if Equal', 'Special format')],
             54: [('tne', 'R', 'Trap if Not Equal', 'special format')],
             56: [('dsll', 'R', 'Doubleword Shift Left Logical', 'depreciated')],
             58: [('dsrl', 'R', 'Doubleword Shift Right Logical', 'depreciated')],
             59: [('dsra', 'R', 'Doubleword Shift Right Arithmetic', 'depreciated')],
             60: [('dsll32', 'R', 'Doubleword Shift Left Logical Plus 32', 'depreciated')],
             62: [('dsrl32', 'R', 'Doubleword Shift Right Logical Plus 32', 'depreciated')],
             63: [('dsra32', 'R', 'Doubleword Shift Right Arithmetic Plus 32', 'depreciated')]}

OneOpcodes = {
             0: [('bltz', 'I', 'Branch on Less Than Zero')],
             1: [('bgez', 'I', 'Branch on Greater Than or Equal to Zero')],
             2: [('bltzl', 'I', 'Branch on Less Than Zero Likely')],
             3: [('bgezl', 'I', 'Branch on Greater Than or Equal to Zero Likely')],
             8: [('tgei', 'I', 'Trap if Greater or Equal Immediate',
                  'MIPS32, removed in Release 6, special format')],
             9: [('tgeiu', 'I', 'Trap If Greater Or Equal Immediate Unsigned',
                  'MIPS32, removed in Release 6, special format')],
             10: [('tlti', 'I', 'Trap if Less Than Immediate',
                   'MIPS32, removed in Release 6, special format')],
             11: [('tltiu', 'I', 'Trap if Less Than Immediate Unsigned',
                   'MIPS32, removed in Release 6, special format')],
             12: [('teqi', 'I', 'Trap if Equal Immediate', 'MIPS32, removed in Release 6')],
             14: [('tnei', 'I', 'Trap if Not Equal Immediate',
                   'MIPS32, removed in Release 6, special format')],
             16: [('bltzal', 'I', 'Branch on Less Than Zero And Link')],
             17: [('bal', 'I', 'Branch and Link', 'Assembly Idiom MIPS32, MIPS32 Release 6')],
             18: [('bltzall', 'I', 'Branch on Less Than Zero And Link Likely')],
             19: [('bgezall', 'I', 'Branch on Greater Than or Equal to Zero and Link Likely')]}

#commented out instructions are not deleted in csv file
miscOpcodes ={
             3: [('jal', 'J', None, 'Jump And Link')],
             4: [('beq', 'I', None, 'Branch on Equal')],
             5: [('bne', 'I', None, 'Branch on Not Equal')],
             6: [('blez', 'I', 0, 'Branch on Less Than or Equal to Zero')],
             7: [('bgtz', 'I', 0, 'Branch on Greater Than Zero')],
             8: [('addi', 'I', None, 'Add Immediate Word')],
             9: [('addiu', 'I', None, 'Add Immediate Unsigned Word')],
             10: [('slti', 'I', None, 'Set on Less Than Immediate')],
             11: [('sltiu', 'I', None, 'Set on Less Than Immediate Unsigned')],
             12: [('andi', 'I', None, 'AND immediate')],
             13: [('ori', 'I', None, 'Or Immediate')],
             14: [('xori', 'I', None, 'Exclusive OR Immediate')],
             15: [('lui', 'I', None, 'Load Upper Immediate', 'MIPS32, Assembly Idiom Release 6')],
             16: [('cop0', 'I', None, 'Coprocessor Operation')],
             17: [('cop1', 'I', None, 'Coprocessor Operation')],
             # opcodes 18 is still present i instruction csv file
             #18: [('cop2', 'I', None, 'Coprocessor Operation'),
             #     ('ldc2', 'R', 14, 'Load Doubleword to Coprocessor 2',
             #      'Release 6: Changed opcode ekstra opcode in rs field: 0b1110'),
             #     ('lwc2', 'R', 10, 'Load Word to Coprocessor 2',
             #      'Release 6: Ekstra opcode in rs field: 0b1010. Special format'),
             #     ('sdc2', 'R', 15, 'Store Doubleword From Coprocessor 2',
             #      'Release 6: Changed format 0b1111 in rs, special format'),
             #     ('swc2', 'R', 11, 'Store Word From Coprocessor 2',
             #      'Release 6: Changed ins format,  rs: 1011')],
             19: [('cop3', 'I', None, 'Coprocessor Operation')],
             20: [('beql', 'I', None, 'Branch on Equal Likely')],
             21: [('bnel', 'I', None, 'Branch on Not Equal Likely')],
             22: [('blezl', 'I', 0, 'Branch on Less Than or Equal to Zero Likely')],
             23: [('bgtzl', 'I', 0, 'Branch on Greater Than Zero Likely')],
             26: [('ldl', 'I', None, 'Load Doubleword Left', 'depreciated')],
             27: [('ldr', 'I', None, 'Load Doubleword Right', 'depreciated')],
             31: [('ll', 'R', 54, 'Load Linked Word', 'Release 6: Changed opcode to R-type.'),
                  ('rdhwr', 'R', 59, 'Read Hardware Register', 'Special format'),
                  ('pref', 'R', 53, 'Prefetch', 'Release 6: Changed format, 0 at bit 7'),
                  ('sc', 'R', 38, 'Store Conditional Word',
                   'Releas 6: Changed format, 0 at bit 7')],
             32: [('lb', 'I', None, 'Load Byte')],
             33: [('lh', 'I', None, 'Load Halfword')],
             34: [('lwl', 'I', None, 'Load Word Left', 'MIPS32, removed in Release 6')],
             35: [('lw', 'I', None, 'Load Word')],
             36: [('lbu', 'I', None, 'Load Byte Unsigned')],
             37: [('lhu', 'I', None, 'Load Halfword Unsigned')],
             38: [('lwr', 'I', None, 'Load Word Right', 'MIPS32, removed in Release 6')],
             39: [('lwu', 'I', None, 'Load Word Unsigned', 'MIPS32, removed in Release 6')],
             40: [('sb', 'I', None, 'Store Byte')],
             41: [('sh', 'I', None, 'Store Halfword')],
             42: [('swl', 'I', None, 'Store Word Left', 'MIPS32, removed in Release 6')],
             43: [('sw', 'I', None, 'Store Word')],
             44: [('sdl', 'I', None, 'Store Doubleword Left', 'depreciated')],
             45: [('sdr', 'I', None, 'Store Doubleword Right', 'depreciated')],
             46: [('swr', 'I', None, 'Store Word Right', 'MIPS32, removed in Release 6')],
             49: [('lwc1', 'I', None, 'Load Word to Floating Point')],
             51: [('pref','I',None,'Prefetch,Invalid mips6 opcode')], #added later
             #51: [('lwc3', 'I', None, 'Load Word To Coprocessor', 'depreciated')],
             52: [('lld', 'I', None, 'Load Linked Doubleword', 'depreciated')],
             53: [('ldc1', 'I', None, 'Load Doubleword to Floating Point')],
             55: [('ld', 'I', None, 'Load Doubleword', 'depreciated')],
             57: [('swc1', 'I', None, 'Store Word from Floating Point')],
             60: [('scd', 'I', None, 'Store Conditional Doubleword', 'depreciated')],
             61: [('sdc1', 'I', None, 'Store Doubleword from Floating Point')],
             63: [('sd', 'I', None, 'Store Doubleword', 'depreciated')]}

registers = [
        'zero',
        'at',
        'v0',
        'v1',
        'a0',
        'a1',
        'a2',
        'a3',
        't0',
        't1',
        't2',
        't3',
        't4',
        't5',
        't6',
        't7',
        's0',
        's1',
        's2',
        's3',
        's4',
        's5',
        's6',
        's7',
        't8',
        't9',
        'k0',
        'k1',
        'gp',
        'sp',
        'fp',
        'ra']
